# Installing ORx on Raspberry Pi with Arch ARM

This document describes the prerequisites and steps for creating a home-made
Outernet Receiver.

## What you need

You will need the following:

- Satellite dish (60cm or larger)
- LNB (must support Ku band)
- USB satellite tuner (see below for devices know to work)
- Raspberry Pi (model B or B+ recommended)
- Internet connection
- HDMI cable for display connection (or HDMI-DVI, HDMI-VGA and similar
  convertors)
- USB keyboard
- Micro USB cable or AC power adaptor for Raspberry Pi
- SD card (4GB or more should be fine)
- (optional) Wi-Fi dongle (see below for supported devices)

## Point the dish

See *Transponders* section for information on where you should point your dish.

## Prepare for software install

This section is intended for people who are not familiar with Raspberry Pi.
Experienced users may safely skip to next section.

Format the SD card and unpack [NOOBS](http://www.raspberrypi.org/downloads/).
Insert the card into the card slot on Raspberry Pi. Attach the display's HDMI
cable and USB keyboard. Connect the Ethernet cable. Finally, connect the micro
USB cable or AC adaptor.

Once NOOBS boots up, it will display a choice of operating systems it can
install. Mark Arch Linux ARM (use arrow keys to navigate and space to mark) and
proceed (press i key to install).

When the system is installed, press OK and Raspberry Pi will reboot. One
booted, you can log into Arch Linux ARM either directly using the attached
keyboard and display, or you can SSH into it. User username 'root' and password
'root'. If you decide to SSH into it, you may reattach the keyboard and display
to your PC.

Once logged into the system, you want to configure repository package mirrors.

Run the following commands:

    mv /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.old
    sed -i 's|^# Server|Server|' /etc/pacman.d/mirrorlist.old
    rankmirrors /etc/pacman.d/mirrorlist.old > /etc/pacman.d/mirrorlist

## Set system date, time, and timezone

For the receiver to display date and time information, it is important to set
your date, time and timezone correctly. To set the date and time, use the
following command:

    timedatectl set-time "YYYY-MM-DD HH:MM"

Replace "YYYY" with correct year, "MM" with zero-padded month (e.g., 09 for
September), "DD" with zero-padded day (e.g., 03 for 3rd), and "HH:MM" with
24-hour format time.

To set the timezone, use the following command:

    timedatectl set-timezone TIMEZONE

"TIMEZONE" should be replace by an appropriate time zone name. To get a list of
time zones, you can use this command:

    timedatectl list-timezones

You can use the `grep` command to filter the timezones. For example, if
you want to know what the timezone for Chicago, you can type:

    timedatectl list-timezones | grep -i chicago

The above command returns "America/Chicago", which you can then use like so:

    timedatectl set-timezone America/Chicago

## Upgrade Arch Linux, the kernel, and install wget

For some DVB tuners, you may need a newer kernel. You can upgrade all the software and to the latest 
version of the kernel by running:

    pacman -Sy
    pacman -Su
    pacman -S linux-raspberrypi-latest linux-raspberrypi-latest-headers wget

Answer Yes (press *y*) to all questions.

## Install Outernet software and TVHeadend

To install the base software for Outernet Receiver, you can use our install
script:

    wget https://raw.githubusercontent.com/Outernet-Project/orx-install/master/archarm/install.sh
    bash install.sh

The script will do the following:

1. installs necessary packages (Python 3, Python 2, openssl, git, avahi)
1. installs firmwares for supported DVB-S/S2 tuners (see list below)
1. installs Outernet Data Delivery agent package
1. installs Outernet Librarian
1. Creates Librarian system service
1. Creates necessary directories
1. Installs TVHeadend from AUR
1. Configures and starts system services

You can troubleshoot problems during the install by looking at `install.log`
file created in the same directory where you started the install script.

## Attach the DVB-S/S2 tuner

Attach your DVB-S/S2 tuner to the USB port (you may need a USB hub depending on
Raspberry Pi model).

## Restart Raspberry Pi

Restart Raspberry Pi. You can issue the reboot command, or simply unplug and
plug back in the micro USB cable or AC adaptor.

## Tune into an Outernet transponder

If you want to add muxes manually, you can find more information in the
*Transponders* section.

Once Raspberry Pi is booted, access its IP address and port 9981. For instance,
if your Raspberry Pi IP address is 192.168.10.247, you will access
192.168.10.247:9981. This brings up the TVHeadend interface.

![TVHeadend: choosing DVB interface](../img/00_tvheadend.png)

Check the *Enabled* checkbox for your tuner, and click Save.

![TVHeadend: enabling DVB interface](../img/01_enable.png)

Click the *Add DVB Network by location...* button on the left and find your
satellite.

![TVHeadend: add network](../img/02_network.png)

TVHeadend will start performing the initial scan to get the names of all
channels. Give it a few minutes, then switch over to *Services* tab.

![TVHeadend: services](../img/03_map.png)

Locate Outernet service from the list and click the *Map selected* button in 
the toolbar above.

Finally, click the *play* link next to the service name.

Switch over to the *Status* tab at the top of the interface.

![TVHeadend: status](../img/04_status.png)

You should see signal strength there.

After you have performed the above steps, Outernet Data Delivery agent should
start receiving files.

## Access Librarian

You can access Librarian by pointing your browser to Raspberry Pi's IP address.
It runs as web browser so there is no need to type in any port number.

Using Librarian is outside the scope of this document so we won't go into
details here.

## Convert your receiver to access point

For convenience, we have provided a script that converts your Raspberry Pi into
a Wi-Fi access point. Advanced users may prefer to configure everything
themselves, though.

Access point configuration is based on hostapd. It also performs DNS spoofing
so that any address resolves to the device's IP address.

There are many Wi-Fi dongles that can potentially be used for this purpose. Our
scripts has only been tested with the devices listed in the *Supported USB
Wi-Fi dongles* section.

Get the script that matches your dongle's chipset:

    wget https://raw.githubusercontent.com/Outernet-Project/orx-install/master/archarm/setap.sh

To start the conversion, plug in your device and simply run the script:

    bash setap.sh

The script will perform the following modifications:

1. Install necessary packages (iw hostapd dhcp dsniff)
1. Check that the device uses the supported drivers
1. Check that hostapd supports the device
1. Configure the Wi-Fi interface (wlan0) to use static IP of 10.0.0.1
1. Create and install system service that configures the interface on boot
1. Configure hostapd
1. Configure DHCP server
1. Configure DNS spoofing
1. Start the access point

If the access point is not up immediately after the script runs, try waiting a
little until all services are properly initialized. If waiting doesn't help,
try rebooting the system. You can troubleshoot problems during install by
taking a look at `setap.log` file created in the same directory where you ran
the script. If the script fails because there is no `/etc/conf.d` directory,
you can manually create it by running the command `mkdir /etc/conf.d`.

You can customize many of the network-related settings by editing the values
near the top of the script file. This includes the subnet and IP address of the
access point, the SSID and password, and so on.

## Supported USB DVB-S/S2 tuners

- PCTV 460e
- PCTV 461e (requires kernel v3.16 and later)
- Geniatech HDStar TV box (only gen2 model)

## Supported USB Wi-Fi dongles

- TP-Link TL-WN722N (Atheros)
- Edimax EW-7811UN (Realtek)

## Transponders

These are the currently active transponders:

- North America: Galaxy 19 (97.0°W) 12,177 V 23,000 3/4
- Europe: HotBird (13.0°E) 11,470 V 27,500 5/6


